{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport const loadAllProducts = createAsyncThunk('productsPreview/loadAllProducts', async () => {\n  const response = await fetch('http://localhost:8080/products/subcategory');\n  const json = await response.json();\n  return json;\n});\nexport const productsPreviewSlice = createSlice({\n  name: 'productsPreview',\n  initialState: {\n    products: [],\n    categories: [],\n    isProductsLoaded: false,\n    isLoadingProducts: false,\n    failedToLoadProducts: false\n  },\n  extraReducers: {\n    // loadAllProducts async call\n    [loadAllProducts.pending]: (state, action) => {\n      state.isLoadingProducts = true;\n      state.failedToLoadProducts = false;\n      state.isProductsLoaded = false;\n    },\n    [loadAllProducts.fulfilled]: (state, action) => {\n      state.isLoadingProducts = false;\n      state.failedToLoadProducts = false;\n      state.isProductsLoaded = true;\n      state.products = action.payload;\n    },\n    [loadAllProducts.rejected]: (state, action) => {\n      state.isLoadingProducts = false;\n      state.failedToLoadProducts = true;\n      state.isProductsLoaded = false;\n    }\n  }\n}); // select isLoadingProducts state\n\nexport const isProductsLoaded = state => state.productsPreview.isProductsLoaded; // select isLoadingProducts state\n\nexport const isLoadingProducts = state => state.productsPreview.isLoadingProducts; // select all productsPreview state\n\nexport const selectProducts = state => state.productsPreview.products;\nexport default productsPreviewSlice.reducer;","map":{"version":3,"sources":["/Users/edward/Projects/e-commerce-appleclone/client/src/components/productPreview/productsPreviewSlice.js"],"names":["createAsyncThunk","createSlice","loadAllProducts","response","fetch","json","productsPreviewSlice","name","initialState","products","categories","isProductsLoaded","isLoadingProducts","failedToLoadProducts","extraReducers","pending","state","action","fulfilled","payload","rejected","productsPreview","selectProducts","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAAC,iCAAD,EAAoC,YAAY;AAC9F,QAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEA,SAAOA,IAAP;AACA,CAL8C,CAAxC;AAOP,OAAO,MAAMC,oBAAoB,GAAGL,WAAW,CAAC;AAC/CM,EAAAA,IAAI,EAAE,iBADyC;AAE/CC,EAAAA,YAAY,EAAE;AACbC,IAAAA,QAAQ,EAAE,EADG;AAEbC,IAAAA,UAAU,EAAE,EAFC;AAGbC,IAAAA,gBAAgB,EAAE,KAHL;AAIbC,IAAAA,iBAAiB,EAAE,KAJN;AAKbC,IAAAA,oBAAoB,EAAE;AALT,GAFiC;AAS/CC,EAAAA,aAAa,EAAE;AACd;AACA,KAACZ,eAAe,CAACa,OAAjB,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7CD,MAAAA,KAAK,CAACJ,iBAAN,GAA0B,IAA1B;AACAI,MAAAA,KAAK,CAACH,oBAAN,GAA6B,KAA7B;AACAG,MAAAA,KAAK,CAACL,gBAAN,GAAyB,KAAzB;AACA,KANa;AAOd,KAACT,eAAe,CAACgB,SAAjB,GAA6B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC/CD,MAAAA,KAAK,CAACJ,iBAAN,GAA0B,KAA1B;AACAI,MAAAA,KAAK,CAACH,oBAAN,GAA6B,KAA7B;AACAG,MAAAA,KAAK,CAACL,gBAAN,GAAyB,IAAzB;AACAK,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACE,OAAxB;AACA,KAZa;AAad,KAACjB,eAAe,CAACkB,QAAjB,GAA4B,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC9CD,MAAAA,KAAK,CAACJ,iBAAN,GAA0B,KAA1B;AACAI,MAAAA,KAAK,CAACH,oBAAN,GAA6B,IAA7B;AACAG,MAAAA,KAAK,CAACL,gBAAN,GAAyB,KAAzB;AACA;AAjBa;AATgC,CAAD,CAAxC,C,CA6BP;;AACA,OAAO,MAAMA,gBAAgB,GAAIK,KAAD,IAAWA,KAAK,CAACK,eAAN,CAAsBV,gBAA1D,C,CAEP;;AACA,OAAO,MAAMC,iBAAiB,GAAII,KAAD,IAAWA,KAAK,CAACK,eAAN,CAAsBT,iBAA3D,C,CAEP;;AACA,OAAO,MAAMU,cAAc,GAAIN,KAAD,IAAWA,KAAK,CAACK,eAAN,CAAsBZ,QAAxD;AAEP,eAAeH,oBAAoB,CAACiB,OAApC","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nexport const loadAllProducts = createAsyncThunk('productsPreview/loadAllProducts', async () => {\n\tconst response = await fetch('http://localhost:8080/products/subcategory');\n\tconst json = await response.json();\n\n\treturn json;\n});\n\nexport const productsPreviewSlice = createSlice({\n\tname: 'productsPreview',\n\tinitialState: {\n\t\tproducts: [],\n\t\tcategories: [],\n\t\tisProductsLoaded: false,\n\t\tisLoadingProducts: false,\n\t\tfailedToLoadProducts: false,\n\t},\n\textraReducers: {\n\t\t// loadAllProducts async call\n\t\t[loadAllProducts.pending]: (state, action) => {\n\t\t\tstate.isLoadingProducts = true;\n\t\t\tstate.failedToLoadProducts = false;\n\t\t\tstate.isProductsLoaded = false;\n\t\t},\n\t\t[loadAllProducts.fulfilled]: (state, action) => {\n\t\t\tstate.isLoadingProducts = false;\n\t\t\tstate.failedToLoadProducts = false;\n\t\t\tstate.isProductsLoaded = true;\n\t\t\tstate.products = action.payload;\n\t\t},\n\t\t[loadAllProducts.rejected]: (state, action) => {\n\t\t\tstate.isLoadingProducts = false;\n\t\t\tstate.failedToLoadProducts = true;\n\t\t\tstate.isProductsLoaded = false;\n\t\t},\n\t},\n});\n// select isLoadingProducts state\nexport const isProductsLoaded = (state) => state.productsPreview.isProductsLoaded;\n\n// select isLoadingProducts state\nexport const isLoadingProducts = (state) => state.productsPreview.isLoadingProducts;\n\n// select all productsPreview state\nexport const selectProducts = (state) => state.productsPreview.products;\n\nexport default productsPreviewSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}